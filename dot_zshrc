#!/usr/bin/env zsh

#------------------------------------
# start zprof
[ -z "$ZPROF" ] || zmodload zsh/zprof
#------------------------------------

#0="${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}"
#0="${${(M)0:#/*}:-$PWD/$0}"
#print -- "${0:h}"
#local ZDOTDIR="${0:h}"
local ZDOTDIR=${XDG_CONFIG_HOME:=~/.config}/zsh
for f in ${ZDOTDIR}/rc.d/<->-*zsh(N); do
    source "$f"
    #print -- "$f"
done

#------------------------------------
# end zprof
[ -z "$ZPROF" ] || zprof | $PAGER
#------------------------------------

############### -------------

#zinit ice lucid
#zinit light woefe/git-prompt.zsh

#zinit ice lucid
#zinit light romkatv/zsh-prompt-benchmark

# --- load with wait ---

#\zinit ice lucid wait"!0" depth"1" atinit"zpcompinit; zpcdreplay" atload"set_fast_theme"
#zinit ice lucid wait"!0" depth"1" atinit"zpcompinit; zpcdreplay"

#zinit ice lucid wait"0" depth"1" blockf
#zinit light yuki-yano/zsh-completions-anyenv

# skip
#zinit ice lucid wait"0" depth"1"
#zinit light yukiycino-dotfiles/fancy-ctrl-z

#-----------------------

# zsh-autosuggestions
ZSH_AUTOSUGGEST_USE_ASYNC=1
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(accept-line)
#\ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff,bg=cyan,bold,underline"
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff,bold,underline"

#-----------------------

bindkey "$terminfo[kcbt]" reverse-menu-complete

# edit command line with $EDITOR
zle -N edit-command-line
bindkey '^xe'  edit-command-line
bindkey '^x^e' edit-command-line

# Prompt
#colored_time=%{$fg[cyan]%}%T
#colored_user=$colors[$((`echo "$USER" | sum | cut -f1 -d' '`%${#colors}))+1]$USER
#colored_at=%{$fg[white]%}@
#host_name=`hostname | cut -d. -f1`
##colored_host=$colors[$((`echo "$host_name" | sum | cut -f1 -d' '`%${#colors}))+1]$host_name
#colored_host=%{$fg[blue]%}$host_name
#colored_colon=%{$reset_color%}:
#colored_path=%{$fg[magenta]%}%~
#colored_prompt=%{$reset_color%}%#
#PROMPT="${colored_time} ${colored_user}${colored_at}${colored_host}${colored_colon}${colored_path} $colored_prompt "

# Functions
## edit-command-line
autoload -Uz edit-command-line
autoload history-search-end
## set iTerm2 profile
it2prof() { echo -e "\033]50;SetProfile=$1\a" }

# Key bindings
bindkey -e

# open nvim with fzf
bindkey -s '^o' 'nvim $(fzf)^M'

# [skip]
## default binds
#bindkey '^a' beginning-of-line
#bindkey '^b' backward-char
#bindkey '^d' delete-char-or-list
#bindkey '^e' end-of-line
#bindkey '^f' forward-char
##bindkey '^k' kill-line-or-up-pane
##bindkey '^w' backward-kill-word
#bindkey '^p' history-beginning-search-backward
#bindkey '^n' history-beginning-search-forward
#bindkey '^y' yank

zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey '^P' history-beginning-search-backward-end
bindkey '^N' history-beginning-search-forward-end

## zeno
#if [[ -n $ZENO_LOADED ]]; then
#    bindkey ' '  zeno-auto-snippet
#    bindkey '^m' zeno-auto-snippet-and-accept-line
#    bindkey '^i' zeno-completion
#    bindkey '^g' zeno-ghq-cd # switch ghq dir
#    bindkey '^r' zeno-history-selection # search history
#    bindkey '^x^s' zeno-insert-snippet # search snippets
#    bindkey '^x ' zeno-insert-space # insert space
#fi

# zcompile
#if [[ ! -f ~/.zshrc.zwc ]] || [[ "$(readlink ~/.zshrc)" -nt ~/.zshrc.zwc ]]; then
#    zcompile ~/.zshrc
#fi

# source local
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local
[[ -s ~/.profile ]] && source ~/.profile
[[ -s ~/.login ]] && source ~/.login

# starship
command -v starship &> /dev/null && eval "$(starship init zsh)"

# Attach tmux on login
#if [ ! -z `which tmux` ]; then
#  if [ $SHLVL = 1 ]; then
#    if [ $(( `ps aux | grep tmux | grep $USER | grep -v grep | wc -l` )) != 0 ]; then
#      echo -n 'Attach tmux session? [Y/n]'
#      read YN
#      [[ $YN = '' ]] && YN=y
#      [[ $YN = y ]] && tmux attach
#    #else
#    #  tmux
#    fi
#  fi
#fi
