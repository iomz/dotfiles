snippets:
  - name: docker ps -a
    keyword: dps
    snippet: docker ps -a --format="table {{.Names}}\t{{.Status}}\t{{.Ports}}"
  - name: ghq get shallow
    # ghq get shallow
    keyword: ghqs
    snippet: ghq get --shallow
  - name: git ci -m
    keyword: gci
    snippet: git commit -m '{{commit_message}}'
  - name: git push origin HEAD
    keyword: gpo
    snippet: git push origin HEAD
  - name: branch
    keyword: B
    snippet: git symbolic-ref --short HEAD
    context:
      lbuffer: '^git\s+checkout\s+'
    evaluate: true # eval snippet
  - name: git st
    keyword: gs
    snippet: git status --short --branch
  - name: "null"
    keyword: "null"
    snippet: ">/dev/null 2>&1"
    # auto expand condition
    # If not defined, it is only valid at the beginning of a line.
    context:
      # buffer: ''
      lbuffer: '.+\s'
      # rbuffer: ''
completions:
  # simple sourceCommand, no callback
  - name: kill signal
    patterns:
      - "^kill -s $"
    sourceCommand: "kill -l | tr ' ' '\\n'"
    options:
      --prompt: "'Kill Signal> '"
  # use excludePatterns and callback
  - name: kill pid
    patterns:
      - "^kill( .*)? $"
    excludePatterns:
      # -l, -n or -s is followed by SIGNAL instead of PID
      - " -[lns] $"
    sourceCommand: "LANG=C ps -ef | sed 1d"
    options:
      --multi: true
      --prompt: "'Kill Process> '"
    callback: "awk '{print $2}'"
  # Use null (\0) termination Input / Output
  - name: chdir
    patterns:
      - "^cd $"
    sourceCommand: "find . -path '*.git/*' -prune -o -path '*/.tmp/*' -prune -o -path '*Library/*' -prune -o -path '*.Trash/*' -prune -o -path '*.cache/*' -prune -o -type d -print0"
    options:
      # Added --read0 if null termination is used in `sourceCommand` output.
      --read0: true
      --prompt: "'[zeno]chdir '"
      --preview: "cd {} && ls -a | sed '/^[.]*$/d'"
    callback: "cut -c 3-"
    callbackZero: true # null termination is used in `callback` I/O
  - name: vim
    patterns:
      - "^n?vim? $"
    sourceCommand: "find . -path '*.git/*' -prune -o -path '*Library/*' -prune -o -path '*.Trash/*' -prune -o -path '*.cache/*' -prune -o -type f -print0"
    options:
      # Added --read0 if null termination is used in `sourceCommand` output.
      --read0: true
      --prompt: "'[zeno]file '"
      --preview: "cat {}"
    callback: "cut -c 3-"
    callbackZero: true # null termination is used in `callback` I/O
